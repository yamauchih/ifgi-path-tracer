* Task ifgi path tracer 2011-8-31(Wed)

** top5
*** DONE Fix QtSceneGrpahDialog
*** DONE examiner background color
*** DONE Added trimesh Info
*** DONE GLTrimeshNode doesnot have set primitive since it is not inherited from
    SceneGraph.PritimiveNode. Implement PrimitiveNode interface.
*** DONE bounding box update for SceneGraph and GLScneneGraph
*** DONE GL scenegraph GLMaterialNode
*** TODO GL Light node set_config_data/get_config_data
*** TODO scenegraph    MaterialNode
*** TODO construct GLScneneGraph from SceneGraph
    Scenegraph primitive node (has a primitive)
    GLScenegraph Primitive Node (but primitive node will be inherited to
    e.g. GLTrimeshNode, because GLScneGraphNode has draw() to draw the primitives)


** DONE Add Camera parameter control GUI
*** DONE parameter iterator of Camera
**** DONE get_keys (list), and get value dict, get parameter type dict
**** DONE typename update: vector3 -> float_3, enum -> enum_enumname
*** DONE create parameter control from this iterator
*** DONE Add combobox widget, combobox QtWidgetIOIF
**** DONE Implement observer
**** DONE complete Camera set_config_data/get_config_data
*** DONE set the parameter values
**** DONE listener NodeDialog, QtSceneGraphWidget, QtExaminerWidget

** DONE animation mode. examiner menu animatio on/off

** TODO implement material
*** TODO add GL light node, config, info, trimesh refers light
*** TODO add GL materal node
*** TODO append obj file function.
    append under mesh group with material node + trimesh node
*** TODO define material class
*** TODO material parser (ExtObjReader, extension of obj file reader)

** TODO implement ifgi parser
*** TODO read material and geometry definition
*** TODO geometry parsing and get mesh for each geometry
*** TODO create ifgi scenegraph nodes
*** TODO create OpenGL scenegraph nodes


** TODO Append scene: load additional ifgi, obj file.

** TODO Implement texture class
*** TextureIF
*** ConstantColorTexture
*** ImageTexture

** TODO Bug

** TODO Add primitive to get_bsdf

** TODO material の項を読んで bsdf をどう評価するか見る．しかし最初は
   lambertian のみ．

** TODO bsdf->material

** TODO Example: test_ifgi_render.py How to render a scene

*** render a scene
*** add a lambert material
**** lookup light group
*** create a scene update to load an obj file
*** remove one object and render it
*** depth buffer

** TODO Add test: use Camera, ray triangle intersection.
** TODO Implement update button (scenegraph camera)

** TODO fix camera
*** TODO focul length is not correct
*** TODO add lens to screen, lens to film distance
*** TODO don't care lens to screen for now
*** TODO z near and far should be adjusted by viewall

** TODO test triangle ray intersection with perspective camera

*** it may be faster if I use linear system solver to find the
    ray-intersection solution.
    numpy.linalg.det(b), but compute determinant twice is expensive.
    numpy.linalg.solve(a,b)

*** Fix the viewport

*** ImageFilm as Primitive (draw()able in the screen)
**** resizable.
**** when set to the camera, resize.

** Add ImageFilm Node (choose buffer and draw)
   attach framebuffer node to camera node
   framebffers are shared between IFGICamera and GLCamera
*** RGBA frame buffer (32bit)
*** Z buffer          (32bit)

** Add GLImageFilmNode

** drawa()ble node in the screen.


** Shoot rays
*** Intersection routine with a triangle and its test.

** Add some QtWidgetIO
*** Color button
*** GLNode has the configuration script to set up the config.

** Picking

** Menu Render -- Render GL
*** Render IFGI

** Scene
*** Primitive
*** 一つしか object を持てない

** Camera: lookat を入れる．view direction は normalized

** ObjLoader
   Scene に object を入れる

** OffLoader

** GLNode
   Scene の要素を参照して draw する (update は v0 では考えない)

--
Code guideline

- method name
  foo_bar_baz()

---

Later TODO

- OpenMeshPrimitive, GLOpenMeshViewNode
